'use client';

import { JSX, ReactNode } from 'react';
import {
  ApolloClient,
  createHttpLink,
  InMemoryCache,
  ApolloProvider,
} from '@apollo/client';
import { setContext } from '@apollo/client/link/context';
import awsconfig from '../aws-config';
import { Amplify } from 'aws-amplify';

import './styles/globals.css';
import { Authenticator } from '@aws-amplify/ui-react';

Amplify.configure(awsconfig);

interface LayoutProps {
  children: ReactNode;
}

const entpoint = process.env.NEXT_PUBLIC_GRAPHQL_API_ENDPOINT_URL;
const httpLink = createHttpLink({
  uri: entpoint,
});

const authLink = setContext((_, { headers }) => {
  // get the authentication token from local storage if it exists
  const token = localStorage.getItem('token');
  // return the headers to the context so httpLink can read them
  return {
    headers: {
      ...headers,
      authorization: token ? `Bearer ${token}` : '',
    },
  };
});

const client = new ApolloClient({
  link: authLink.concat(httpLink),
  cache: new InMemoryCache(),
});

export default function Layout({ children }: LayoutProps): JSX.Element {
  return (
    <html lang="en">
      <head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </head>
      <body>
        <Authenticator.Provider>
          <ApolloProvider client={client}>{children}</ApolloProvider>
        </Authenticator.Provider>
      </body>
    </html>
  );
}
